{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createTextVNode as _createTextVNode, withModifiers as _withModifiers, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-84b6d196\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"Create a New Task\", -1 /* HOISTED */));\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"Create Task\", -1 /* HOISTED */));\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"Tasks\", -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", null, [_hoisted_1, _createElementVNode(\"form\", {\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => $options.createTask && $options.createTask(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"p\", null, [_createTextVNode(\"Task Name: \"), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"taskName\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.taskName = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.taskName]])]), _createElementVNode(\"p\", null, [_createTextVNode(\"Task Date: \"), _withDirectives(_createElementVNode(\"input\", {\n    type: \"date&time\",\n    id: \"taskDate\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.taskDate = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.taskDate]])]), _hoisted_2], 32 /* NEED_HYDRATION */)]), _createElementVNode(\"div\", null, [_hoisted_3, _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.tasks, task => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: task.name\n    }, _toDisplayString(task.name) + \" - \" + _toDisplayString(task.date), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","type","_createElementBlock","_Fragment","_hoisted_1","onSubmit","_cache","_withModifiers","args","$options","createTask","_createTextVNode","id","$event","$data","taskName","required","taskDate","_hoisted_2","_hoisted_3","_renderList","tasks","task","key","name","_toDisplayString","date"],"sources":["/Users/wolf/Hub4Codes/task_management_app/task_management_ui/src/components/Task.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>Create a New Task</h1>\n    <form @submit.prevent=\"createTask\">\n      <p>Task Name:\n        <input type=\"text\" id=\"taskName\" v-model=\"taskName\" required>\n      </p>\n      <p>Task Date: \n        <input type=\"date&time\" id=\"taskDate\" v-model=\"taskDate\" required>\n      </p>\n      <button type=\"submit\">Create Task</button>\n    </form>\n  </div>\n  <div>\n    <h1>Tasks</h1>\n    <ul>\n      <li v-for=\"task in tasks\" :key=\"task.name\">\n        {{ task.name }} - {{ task.date }}\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'Task',\n  data() {\n    return {\n      taskName: '',\n      taskDate: '',\n      tasks: []\n    };\n  },\n  methods: {\n    createTask() {\n      // Add your logic here to create a new task\n      let task = {\n        name: this.taskName,\n        date: this.taskDate\n      }\n      this.tasks.push(task);\n\n      // Also send the task to the server using fetch\n      fetch('api/tasks', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(task)\n      });\n\n      // Reset the taskName after creating the task\n      this.taskName = '';\n      this.taskDate = '';\n    }\n  }\n}\n\n</script>\n\n<style scoped>\n  button {\n    position: relative;\n    width: 35%;\n  }\n\n  ul {\n    color: wheat;\n  }\n\n  li {\n    color: wheat;\n  }\n</style>\n"],"mappings":";;gEAEIA,mBAAA,CAA0B,YAAtB,mBAAiB;gEAQnBA,mBAAA,CAA0C;EAAlCC,IAAI,EAAC;AAAQ,GAAC,aAAW;gEAInCD,mBAAA,CAAc,YAAV,OAAK;;uBAdbE,mBAAA,CAAAC,SAAA,SACEH,mBAAA,CAWM,cAVJI,UAA0B,EAC1BJ,mBAAA,CAQO;IARAK,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAHjBC,cAAA,KAAAC,IAAA,KAG2BC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;MAC/BR,mBAAA,CAEI,YANVW,gBAAA,CAIS,aACD,G,gBAAAX,mBAAA,CAA6D;IAAtDC,IAAI,EAAC,MAAM;IAACW,EAAE,EAAC,UAAU;IALxC,uBAAAN,MAAA,QAAAA,MAAA,MAAAO,MAAA,IAKkDC,KAAA,CAAAC,QAAQ,GAAAF,MAAA;IAAEG,QAAQ,EAAR;iDAAVF,KAAA,CAAAC,QAAQ,E,KAEpDf,mBAAA,CAEI,YATVW,gBAAA,CAOS,aACD,G,gBAAAX,mBAAA,CAAkE;IAA3DC,IAAI,EAAC,WAAW;IAACW,EAAE,EAAC,UAAU;IAR7C,uBAAAN,MAAA,QAAAA,MAAA,MAAAO,MAAA,IAQuDC,KAAA,CAAAG,QAAQ,GAAAJ,MAAA;IAAEG,QAAQ,EAAR;iDAAVF,KAAA,CAAAG,QAAQ,E,KAEzDC,UAA0C,C,8BAG9ClB,mBAAA,CAOM,cANJmB,UAAc,EACdnB,mBAAA,CAIK,c,kBAHHE,mBAAA,CAEKC,SAAA,QAlBXiB,WAAA,CAgByBN,KAAA,CAAAO,KAAK,EAAbC,IAAI;yBAAfpB,mBAAA,CAEK;MAFsBqB,GAAG,EAAED,IAAI,CAACE;wBAChCF,IAAI,CAACE,IAAI,IAAG,KAAG,GAAAC,gBAAA,CAAGH,IAAI,CAACI,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}