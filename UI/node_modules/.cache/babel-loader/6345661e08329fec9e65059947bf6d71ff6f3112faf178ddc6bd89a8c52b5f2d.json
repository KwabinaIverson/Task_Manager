{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createTextVNode as _createTextVNode, toDisplayString as _toDisplayString, withModifiers as _withModifiers, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-84b6d196\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"Create a New Task\", -1 /* HOISTED */));\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"Create Task\", -1 /* HOISTED */));\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"Task Tracker\", -1 /* HOISTED */));\nconst _hoisted_5 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", null, [_hoisted_1, _createElementVNode(\"form\", {\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => $options.createTask && $options.createTask(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"p\", null, [_createTextVNode(\"Task Name: \"), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"taskName\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.taskName = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.taskName]])]), _createElementVNode(\"p\", null, [_createTextVNode(\"Task Date: \"), _withDirectives(_createElementVNode(\"input\", {\n    type: \"datetime-local\",\n    id: \"taskDate\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.taskDate = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.taskDate]])]), _createElementVNode(\"p\", null, \"User ID: \" + _toDisplayString($props.userId), 1 /* TEXT */), _hoisted_2], 32 /* NEED_HYDRATION */)]), _hoisted_3, _createElementVNode(\"div\", null, [_hoisted_4, _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.tasks, task => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: task.name,\n      onClick: _cache[3] || (_cache[3] = (...args) => $options.updateTask && $options.updateTask(...args))\n    }, [_createTextVNode(_toDisplayString(task.title) + \" --> \" + _toDisplayString(task.date) + \" \", 1 /* TEXT */), _createElementVNode(\"i\", {\n      onClick: $event => $options.onDelete(task.id),\n      class: \"fas fa-times\"\n    }, null, 8 /* PROPS */, _hoisted_5)]);\n  }), 128 /* KEYED_FRAGMENT */))])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","type","class","_createElementBlock","_Fragment","_hoisted_1","onSubmit","_cache","_withModifiers","args","$options","createTask","_createTextVNode","id","$event","$data","taskName","required","taskDate","_toDisplayString","$props","userId","_hoisted_2","_hoisted_3","_hoisted_4","_renderList","tasks","task","key","name","onClick","updateTask","title","date","onDelete","_hoisted_5"],"sources":["/Users/wolf/Hub4Codes/task_management_app/task_management_ui/src/components/Task.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>Create a New Task</h1>\n    <form @submit.prevent=\"createTask\">\n      <p>Task Name:\n        <input type=\"text\" id=\"taskName\" v-model=\"taskName\" required>\n      </p>\n      <p>Task Date: \n        <input type=\"datetime-local\" id=\"taskDate\" v-model=\"taskDate\" required>\n      </p>\n      <p>User ID: {{ userId }}</p>\n      <button type=\"submit\">Create Task</button>\n    </form>\n  </div>\n  <div class=\"\">\n\n  </div>\n  <div>\n    <h1>Task Tracker</h1>\n    <ul>\n      <li v-for=\"task in tasks\" :key=\"task.name\" @click=\"updateTask\">\n        {{ task.title }} --> {{ task.date }}\n        <i @click=\"onDelete(task.id)\" class=\"fas fa-times\"></i>\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'Task',\n  props: ['userId'],\n  data() {\n    return {\n      taskName: '',\n      taskDate: '',\n      tasks: [],\n    };\n  },\n  methods: {\n    onDelete(id) {\n      if (confirm('Are you sure you want to delete this task?')) {\n        this.tasks = this.tasks.filter(task => task.id !== id);\n\n      // Also send the delete request to the server using fetch\n        fetch(`api/tasks/${id}`, {\n          method: 'DELETE'\n        })\n      }\n    },\n    createTask() {\n      // Add your logic here to create a new task\n      let task = {\n        title: this.taskName,\n        date: this.taskDate,\n        status: 'pending',\n        user_id: this.userId\n      }\n      this.tasks.push(task);\n\n      // Also send the task to the server using fetch\n      fetch('api/tasks', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(task)\n      });\n\n      // Reset the taskName after creating the task\n      this.taskName = '';\n      this.taskDate = '';\n    },\n    updateTask() {\n      if (confirm('Are you sure you want to update this task?')) {\n        alert('Task updated');\n      }\n    },\n    async fetchTasks() {\n      // Fetch tasks from server\n      const res = await fetch('api/tasks')\n      const data = await res.json()\n\n      return data\n    }\n  },\n  async created() {\n    // Fetch the tasks from the server that belong to the user\n    const allTasks = await this.fetchTasks();\n    this.tasks = allTasks.filter(task => task.user_id === this.userId);\n  }\n}\n\n</script>\n\n<style scoped>\n  .fas {\n    color: red;\n  }\n\n  button {\n    position: relative;\n    width: 35%;\n    transition-duration: 0.4s;\n  }\n\n  button:hover {\n    background: #00ff80;\n  }\n\n  ul {\n    color: wheat;\n  }\n\n  li {\n    color: wheat;\n    cursor: pointer;\n  }\n</style>\n"],"mappings":";;gEAEIA,mBAAA,CAA0B,YAAtB,mBAAiB;gEASnBA,mBAAA,CAA0C;EAAlCC,IAAI,EAAC;AAAQ,GAAC,aAAW;gEAGrCD,mBAAA,CAEM;EAFDE,KAAK,EAAC;AAAE;gEAIXF,mBAAA,CAAqB,YAAjB,cAAY;mBAlBpB;;uBAAAG,mBAAA,CAAAC,SAAA,SACEJ,mBAAA,CAYM,cAXJK,UAA0B,EAC1BL,mBAAA,CASO;IATAM,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAHjBC,cAAA,KAAAC,IAAA,KAG2BC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;MAC/BT,mBAAA,CAEI,YANVY,gBAAA,CAIS,aACD,G,gBAAAZ,mBAAA,CAA6D;IAAtDC,IAAI,EAAC,MAAM;IAACY,EAAE,EAAC,UAAU;IALxC,uBAAAN,MAAA,QAAAA,MAAA,MAAAO,MAAA,IAKkDC,KAAA,CAAAC,QAAQ,GAAAF,MAAA;IAAEG,QAAQ,EAAR;iDAAVF,KAAA,CAAAC,QAAQ,E,KAEpDhB,mBAAA,CAEI,YATVY,gBAAA,CAOS,aACD,G,gBAAAZ,mBAAA,CAAuE;IAAhEC,IAAI,EAAC,gBAAgB;IAACY,EAAE,EAAC,UAAU;IARlD,uBAAAN,MAAA,QAAAA,MAAA,MAAAO,MAAA,IAQ4DC,KAAA,CAAAG,QAAQ,GAAAJ,MAAA;IAAEG,QAAQ,EAAR;iDAAVF,KAAA,CAAAG,QAAQ,E,KAE9DlB,mBAAA,CAA4B,WAAzB,WAAS,GAAAmB,gBAAA,CAAGC,MAAA,CAAAC,MAAM,kBACrBC,UAA0C,C,8BAG9CC,UAEM,EACNvB,mBAAA,CAQM,cAPJwB,UAAqB,EACrBxB,mBAAA,CAKK,c,kBAJHG,mBAAA,CAGKC,SAAA,QAvBXqB,WAAA,CAoByBV,KAAA,CAAAW,KAAK,EAAbC,IAAI;yBAAfxB,mBAAA,CAGK;MAHsByB,GAAG,EAAED,IAAI,CAACE,IAAI;MAAGC,OAAK,EAAAvB,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEC,QAAA,CAAAqB,UAAA,IAAArB,QAAA,CAAAqB,UAAA,IAAAtB,IAAA,CAAU;QApBnEG,gBAAA,CAAAO,gBAAA,CAqBWQ,IAAI,CAACK,KAAK,IAAG,OAAK,GAAAb,gBAAA,CAAGQ,IAAI,CAACM,IAAI,IAAG,GACpC,iBAAAjC,mBAAA,CAAuD;MAAnD8B,OAAK,EAAAhB,MAAA,IAAEJ,QAAA,CAAAwB,QAAQ,CAACP,IAAI,CAACd,EAAE;MAAGX,KAAK,EAAC;4BAtB5CiC,UAAA,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}