{"ast":null,"code":"import Task from '@/component/Task.vue';\nexport default {\n  name: 'DashboardView',\n  data() {\n    return {\n      username: '',\n      // You can pass the username from the signup page or fetch it from the store\n      users: [],\n      user: {},\n      showUserInfo: false\n    };\n  },\n  components: {\n    task\n  },\n  methods: {\n    async fetchUsers() {\n      // Fetch users from the API\n      const res = await fetch(\"api/users\");\n      const data = await res.json();\n      return data;\n    },\n    getUser() {\n      //here we will get the user from the users array\n      for (let i = 0; i < this.users.length; i++) {\n        if (this.users[i].first_name === this.username) {\n          this.user = this.users[i];\n          break;\n        }\n      }\n    },\n    toggleUserInfoVisibility(e) {\n      e.preventDefault();\n      this.showUserInfo = !this.showUserInfo;\n      if (this.showUserInfo) {\n        this.getUser();\n      }\n    }\n  },\n  async created() {\n    // Fetch the username from the store  or pass it from the signup page\n    this.username = this.$route.query.username || 'User';\n    this.users = await this.fetchUsers();\n  }\n};","map":{"version":3,"names":["Task","name","data","username","users","user","showUserInfo","components","task","methods","fetchUsers","res","fetch","json","getUser","i","length","first_name","toggleUserInfoVisibility","e","preventDefault","created","$route","query"],"sources":["/Users/wolf/Hub4Codes/task_management_app/task_management_ui/src/views/DashboardView.vue"],"sourcesContent":["<template>\n  <div class=\"dashboard\">\n    <h1>Welcome to the Dashboard, {{ username }}!</h1>\n    <p>Let's get you started</p>\n    <button @click=\"toggleUserInfoVisibility\">Profile</button>\n    <button class=\"logout\"><router-link to=\"/\">Logout</router-link></button>\n    <div v-if=\"showUserInfo && user.id\">\n      <p>UserID: {{ user.id }}</p>\n      <p>Name: {{ user.first_name }} {{ user.last_name }}</p>\n      <p>Email: {{ user.email }}</p>\n      <p>Password: {{ user.password }}</p>\n      <p>DoB: {{ user.date_of_birth }}</p>\n    </div>\n    <Task />\n  </div>\n</template>\n  \n<script>\nimport Task from '@/component/Task.vue'\n\n  export default {\n    name: 'DashboardView',\n    data() {\n      return {\n        username: '', // You can pass the username from the signup page or fetch it from the store\n        users: [],\n        user: {},\n        showUserInfo: false\n      };\n    },\n    components: {\n      task\n    },\n    methods: {\n      async fetchUsers() {\n        // Fetch users from the API\n        const res = await fetch(\"api/users\")\n\n        const data = await res.json()\n        return data\n      },\n      getUser() {\n        //here we will get the user from the users array\n        for (let i=0; i < this.users.length; i++) {\n          if (this.users[i].first_name === this.username) {\n            this.user = this.users[i];\n            break\n          }\n        }\n      },\n      toggleUserInfoVisibility(e) {\n        e.preventDefault()\n\n        this.showUserInfo = !this.showUserInfo\n        if (this.showUserInfo) {\n          this.getUser()\n        }\n      }\n    },\n    async created() {\n      // Fetch the username from the store  or pass it from the signup page\n      this.username = this.$route.query.username || 'User';\n\n      this.users = await this.fetchUsers();\n    }\n};\n</script>\n\n<style scoped>\n  .dashboard {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    height: 100vh;\n  }\n  .dashboard h1 {\n    font-size: 2rem;\n    margin-bottom: 1rem;\n  }\n\n  button {\n    position: relative;\n    text-align: center;\n    transition-duration: 0.4s;\n    padding: 10px 40px;\n    padding-right: 85px;\n  }\n\n  .logout {\n    position: absolute;\n    top: 16%;\n    left: 87%;\n  }\n\n  button:hover {\n    background: #00ff80;\n  }\n</style>\n  "],"mappings":"AAkBA,OAAOA,IAAG,MAAO,sBAAqB;AAEpC,eAAe;EACbC,IAAI,EAAE,eAAe;EACrBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MAAE;MACdC,KAAK,EAAE,EAAE;MACTC,IAAI,EAAE,CAAC,CAAC;MACRC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,UAAU,EAAE;IACVC;EACF,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,UAAUA,CAAA,EAAG;MACjB;MACA,MAAMC,GAAE,GAAI,MAAMC,KAAK,CAAC,WAAW;MAEnC,MAAMV,IAAG,GAAI,MAAMS,GAAG,CAACE,IAAI,CAAC;MAC5B,OAAOX,IAAG;IACZ,CAAC;IACDY,OAAOA,CAAA,EAAG;MACR;MACA,KAAK,IAAIC,CAAC,GAAC,CAAC,EAAEA,CAAA,GAAI,IAAI,CAACX,KAAK,CAACY,MAAM,EAAED,CAAC,EAAE,EAAE;QACxC,IAAI,IAAI,CAACX,KAAK,CAACW,CAAC,CAAC,CAACE,UAAS,KAAM,IAAI,CAACd,QAAQ,EAAE;UAC9C,IAAI,CAACE,IAAG,GAAI,IAAI,CAACD,KAAK,CAACW,CAAC,CAAC;UACzB;QACF;MACF;IACF,CAAC;IACDG,wBAAwBA,CAACC,CAAC,EAAE;MAC1BA,CAAC,CAACC,cAAc,CAAC;MAEjB,IAAI,CAACd,YAAW,GAAI,CAAC,IAAI,CAACA,YAAW;MACrC,IAAI,IAAI,CAACA,YAAY,EAAE;QACrB,IAAI,CAACQ,OAAO,CAAC;MACf;IACF;EACF,CAAC;EACD,MAAMO,OAAOA,CAAA,EAAG;IACd;IACA,IAAI,CAAClB,QAAO,GAAI,IAAI,CAACmB,MAAM,CAACC,KAAK,CAACpB,QAAO,IAAK,MAAM;IAEpD,IAAI,CAACC,KAAI,GAAI,MAAM,IAAI,CAACM,UAAU,CAAC,CAAC;EACtC;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}