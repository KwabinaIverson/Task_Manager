{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-cabbb9e2\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"dashboard\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"Let's get you started: Click on the Profile button to load User Account. (This must be done before creating a new task.)\", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  class: \"logout\"\n};\nconst _hoisted_4 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  const _component_Task = _resolveComponent(\"Task\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h1\", null, \"Welcome to the Dashboard, \" + _toDisplayString($data.username) + \"!\", 1 /* TEXT */), _hoisted_2, _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.toggleUserInfoVisibility && $options.toggleUserInfoVisibility(...args))\n  }, \"Profile\"), _createElementVNode(\"button\", _hoisted_3, [_createVNode(_component_router_link, {\n    to: \"/\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"Logout\")]),\n    _: 1 /* STABLE */\n  })]), $data.showUserInfo && $data.user.id ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createElementVNode(\"p\", null, \"UserID: \" + _toDisplayString($data.user.id), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Name: \" + _toDisplayString($data.user.first_name) + \" \" + _toDisplayString($data.user.last_name), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Email: \" + _toDisplayString($data.user.email), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Password: \" + _toDisplayString($data.user.password), 1 /* TEXT */), _createElementVNode(\"p\", null, \"DoB: \" + _toDisplayString($data.user.date_of_birth), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true), _createVNode(_component_Task, {\n    userId: $data.user.id\n  }, null, 8 /* PROPS */, [\"userId\"])]);\n}","map":{"version":3,"names":["class","_createElementVNode","key","_createElementBlock","_hoisted_1","_toDisplayString","$data","username","_hoisted_2","onClick","_cache","args","$options","toggleUserInfoVisibility","_hoisted_3","_createVNode","_component_router_link","to","default","_withCtx","_createTextVNode","_","showUserInfo","user","id","_hoisted_4","first_name","last_name","email","password","date_of_birth","_createCommentVNode","_component_Task","userId"],"sources":["/Users/wolf/Hub4Codes/task_management_app/task_management_ui/src/views/DashboardView.vue"],"sourcesContent":["<template>\n  <div class=\"dashboard\">\n    <h1>Welcome to the Dashboard, {{ username }}!</h1>\n    <p>Let's get you started: Click on the Profile button to load User Account.\n    (This must be done before creating a new task.)</p>\n    <button @click=\"toggleUserInfoVisibility\">Profile</button>\n    <button class=\"logout\"><router-link to=\"/\">Logout</router-link></button>\n    <div v-if=\"showUserInfo && user.id\">\n      <p>UserID: {{ user.id }}</p>\n      <p>Name: {{ user.first_name }} {{ user.last_name }}</p>\n      <p>Email: {{ user.email }}</p>\n      <p>Password: {{ user.password }}</p>\n      <p>DoB: {{ user.date_of_birth }}</p>\n    </div>\n    <Task :userId=\"user.id\"/>\n  </div>\n</template>\n  \n<script>\nimport Task from '@/components/Task.vue'\n\n  export default {\n    name: 'DashboardView',\n    data() {\n      return {\n        username: '', // You can pass the username from the signup page or fetch it from the store\n        users: [],\n        user: {},\n        showUserInfo: false\n      };\n    },\n    components: {\n      Task\n    },\n    methods: {\n      async fetchUsers() {\n        // Fetch users from the API\n        const res = await fetch(\"api/users\")\n\n        const data = await res.json()\n        return data\n      },\n      getUser() {\n        //here we will get the user from the users array\n        for (let i=0; i < this.users.length; i++) {\n          if (this.users[i].first_name === this.username) {\n            this.user = this.users[i];\n            break\n          }\n        }\n      },\n      toggleUserInfoVisibility(e) {\n        e.preventDefault()\n\n        this.showUserInfo = !this.showUserInfo\n        if (this.showUserInfo) {\n          this.getUser()\n        }\n      }\n    },\n    async created() {\n      // Fetch the username from the store  or pass it from the signup page\n      this.username = this.$route.query.username || 'User';\n\n      this.users = await this.fetchUsers();\n    }\n};\n</script>\n\n<style scoped>\n  .dashboard {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    height: 100vh;\n  }\n  .dashboard h1 {\n    font-size: 2rem;\n    margin-bottom: 1rem;\n  }\n\n  button {\n    position: relative;\n    text-align: center;\n    transition-duration: 0.4s;\n    padding: 10px 40px;\n    padding-right: 85px;\n  }\n\n  .logout {\n    position: absolute;\n    top: 16%;\n    left: 87%;\n  }\n\n  button:hover {\n    background: #00ff80;\n  }\n</style>\n  "],"mappings":";;;EACOA,KAAK,EAAC;AAAW;gEAEpBC,mBAAA,CACmD,WADhD,0HAC4C;;EAEvCD,KAAK,EAAC;AAAQ;;EAN1BE,GAAA;AAAA;;;;uBACEC,mBAAA,CAcM,OAdNC,UAcM,GAbJH,mBAAA,CAAkD,YAA9C,4BAA0B,GAAAI,gBAAA,CAAGC,KAAA,CAAAC,QAAQ,IAAG,GAAC,iBAC7CC,UACmD,EACnDP,mBAAA,CAA0D;IAAjDQ,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,wBAAA,IAAAD,QAAA,CAAAC,wBAAA,IAAAF,IAAA,CAAwB;KAAE,SAAO,GACjDV,mBAAA,CAAwE,UAAxEa,UAAwE,GAAjDC,YAAA,CAAwCC,sBAAA;IAA3BC,EAAE,EAAC;EAAG;IAN9CC,OAAA,EAAAC,QAAA,CAM+C,MAAM,CANrDC,gBAAA,CAM+C,QAAM,E;IANrDC,CAAA;QAOef,KAAA,CAAAgB,YAAY,IAAIhB,KAAA,CAAAiB,IAAI,CAACC,EAAE,I,cAAlCrB,mBAAA,CAMM,OAbVsB,UAAA,GAQMxB,mBAAA,CAA4B,WAAzB,UAAQ,GAAAI,gBAAA,CAAGC,KAAA,CAAAiB,IAAI,CAACC,EAAE,kBACrBvB,mBAAA,CAAuD,WAApD,QAAM,GAAAI,gBAAA,CAAGC,KAAA,CAAAiB,IAAI,CAACG,UAAU,IAAG,GAAC,GAAArB,gBAAA,CAAGC,KAAA,CAAAiB,IAAI,CAACI,SAAS,kBAChD1B,mBAAA,CAA8B,WAA3B,SAAO,GAAAI,gBAAA,CAAGC,KAAA,CAAAiB,IAAI,CAACK,KAAK,kBACvB3B,mBAAA,CAAoC,WAAjC,YAAU,GAAAI,gBAAA,CAAGC,KAAA,CAAAiB,IAAI,CAACM,QAAQ,kBAC7B5B,mBAAA,CAAoC,WAAjC,OAAK,GAAAI,gBAAA,CAAGC,KAAA,CAAAiB,IAAI,CAACO,aAAa,iB,KAZnCC,mBAAA,gBAcIhB,YAAA,CAAyBiB,eAAA;IAAlBC,MAAM,EAAE3B,KAAA,CAAAiB,IAAI,CAACC"},"metadata":{},"sourceType":"module","externalDependencies":[]}