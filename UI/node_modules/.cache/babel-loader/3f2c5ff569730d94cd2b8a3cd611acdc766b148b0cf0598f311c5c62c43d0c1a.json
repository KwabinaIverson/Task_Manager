{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'Task',\n  props: [],\n  data() {\n    return {\n      taskName: '',\n      taskDate: '',\n      tasks: []\n    };\n  },\n  methods: {\n    createTask() {\n      // Add your logic here to create a new task\n      let task = {\n        title: this.taskName,\n        date: this.taskDate,\n        status: 'pending',\n        user_id: userId\n      };\n      this.tasks.push(task);\n\n      // Also send the task to the server using fetch\n      fetch('api/tasks', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(task)\n      });\n\n      // Reset the taskName after creating the task\n      this.taskName = '';\n      this.taskDate = '';\n    }\n  }\n};","map":{"version":3,"names":["name","props","data","taskName","taskDate","tasks","methods","createTask","task","title","date","status","user_id","userId","push","fetch","method","headers","body","JSON","stringify"],"sources":["/Users/wolf/Hub4Codes/task_management_app/task_management_ui/src/components/Task.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>Create a New Task</h1>\n    <form @submit.prevent=\"createTask\">\n      <p>Task Name:\n        <input type=\"text\" id=\"taskName\" v-model=\"taskName\" required>\n      </p>\n      <p>Task Date: \n        <input type=\"date&time\" id=\"taskDate\" v-model=\"taskDate\" required>\n      </p>\n      <button type=\"submit\">Create Task</button>\n    </form>\n  </div>\n  <div>\n    <h1>Tasks</h1>\n    <ul>\n      <li v-for=\"task in tasks\" :key=\"task.name\">\n        {{ task.title }} - {{ task.date }}\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'Task',\n  props: [],\n  data() {\n    return {\n      taskName: '',\n      taskDate: '',\n      tasks: []\n    };\n  },\n  methods: {\n    createTask() {\n      // Add your logic here to create a new task\n      let task = {\n        title: this.taskName,\n        date: this.taskDate,\n        status: 'pending',\n        user_id: userId\n      }\n      this.tasks.push(task);\n\n      // Also send the task to the server using fetch\n      fetch('api/tasks', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(task)\n      });\n\n      // Reset the taskName after creating the task\n      this.taskName = '';\n      this.taskDate = '';\n    }\n  }\n}\n\n</script>\n\n<style scoped>\n  button {\n    position: relative;\n    width: 35%;\n  }\n\n  ul {\n    color: wheat;\n  }\n\n  li {\n    color: wheat;\n  }\n</style>\n"],"mappings":";AAwBA,eAAe;EACbA,IAAI,EAAE,MAAM;EACZC,KAAK,EAAE,EAAE;EACTC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE;IACT,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,UAAUA,CAAA,EAAG;MACX;MACA,IAAIC,IAAG,GAAI;QACTC,KAAK,EAAE,IAAI,CAACN,QAAQ;QACpBO,IAAI,EAAE,IAAI,CAACN,QAAQ;QACnBO,MAAM,EAAE,SAAS;QACjBC,OAAO,EAAEC;MACX;MACA,IAAI,CAACR,KAAK,CAACS,IAAI,CAACN,IAAI,CAAC;;MAErB;MACAO,KAAK,CAAC,WAAW,EAAE;QACjBC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,IAAI;MAC3B,CAAC,CAAC;;MAEF;MACA,IAAI,CAACL,QAAO,GAAI,EAAE;MAClB,IAAI,CAACC,QAAO,GAAI,EAAE;IACpB;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}