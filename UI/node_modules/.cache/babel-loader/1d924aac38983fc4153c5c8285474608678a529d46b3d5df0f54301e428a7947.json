{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nimport { useRouter } from 'vue-router';\nexport default {\n  name: 'SignupUpView',\n  data() {\n    return {\n      email: '',\n      password: '',\n      fname: 'Mackenzie',\n      lname: ''\n    };\n  },\n  setup() {\n    const btnHover = ref(false);\n    const showSuccessModal = ref(false);\n    const fname = ref('');\n    const lname = ref('');\n    return {\n      btnHover,\n      showSuccessModal,\n      fname,\n      lname\n    };\n  },\n  methods: {\n    onSignup(e) {\n      e.preventDefault();\n      if (!this.email || !this.password || !this.fname || !this.lname) {\n        alert('Please fill in every field');\n        return;\n      }\n\n      // Show success modal\n      this.showSuccessModal = true;\n\n      //alert('Account Creation Successful!');\n      //alert(`Welcome to AgileFlow! ${this.fname} ${this.lname}!`);\n      this.email = '';\n      this.password = '';\n      this.fname = '';\n      this.lname = '';\n\n      // Set the username for DashboardView\n      const username = `${this.fname} ${this.lname}`;\n\n      // Redirect to login page to test\n      // Actual implementation will be to the dashboard page\n      this.$router.push({\n        name: '/dashboard',\n        params: {\n          username\n        }\n      });\n    },\n    closeModal() {\n      this.showSuccessModal = false;\n    }\n  }\n};","map":{"version":3,"names":["ref","useRouter","name","data","email","password","fname","lname","setup","btnHover","showSuccessModal","methods","onSignup","e","preventDefault","alert","username","$router","push","params","closeModal"],"sources":["/Users/wolf/Hub4Codes/task_management_app/task_management_ui/src/views/SignupView.vue"],"sourcesContent":["<template>\n  <div class=\"signup\">\n    <div class=\"flex-box-container\">\n      <h1 class=\"app-name\">AgileFlow</h1>\n      <h1 class=\"page-name\">Sign Up Page</h1>\n      <div class=\"flexbox-item\"></div>\n    </div>\n    <form @submit=\"onSignup\">\n      <div class=\"form-group\">\n        <label for=\"first-name\">First Name </label>\n        <input type=\"text\" id=\"fname\" v-model=\"fname\" required placeholder=\"John\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"last-name\">Last Name </label>\n        <input type=\"text\" id=\"lname\" v-model=\"lname\" required placeholder=\"Doe\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"email\">Email </label>\n        <input type=\"email\" id=\"email\" v-model=\"email\" required placeholder=\"johndoe@gmail.com\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"password\">Password </label>\n        <input type=\"password\" id=\"password\" v-model=\"password\" required placeholder=\"babayega\">\n      </div>\n      <button @click=\"onSignup\"\n        @mouseover=\"btnHover = true\"\n        @mouseleave=\"btnHover = false\"\n        :class=\"{ 'is-hovering': btnHover }\"\n      >\n        Sign Up\n      </button>\n    </form>\n    <img class=\"cal-3\" alt=\"Calendar picture 2\" src=\"../assets/cal-3.png\">\n  <!-- Success Modal-->\n    <div v-if=\"showSuccessModal\" class=\"modal\">\n      <div class=\"modal-content\">\n        <span class=\"close\" @click=\"closeModal\">&times;</span>\n        <p>Account Creation Successful!</p>\n        <p>Welcome to AgileFlow! {{ fname }} {{ lname }}!</p>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref } from 'vue'\nimport { useRouter } from 'vue-router'\n\nexport default {\n  name: 'SignupUpView',\n  data() {\n    return {\n      email: '',\n      password: '',\n      fname: 'Mackenzie',\n      lname: ''\n    }\n  },\n  setup() {\n    const btnHover = ref(false);\n    const showSuccessModal = ref(false);\n    const fname = ref('');\n    const lname = ref('');\n\n    return {\n      btnHover,\n      showSuccessModal,\n      fname,\n      lname\n    };\n  },\n  methods: {\n    onSignup(e) {\n      e.preventDefault()\n\n      if(!this.email || !this.password || !this.fname || !this.lname) {\n        alert('Please fill in every field')\n        return\n      }\n\n      // Show success modal\n      this.showSuccessModal = true;\n\n      //alert('Account Creation Successful!');\n      //alert(`Welcome to AgileFlow! ${this.fname} ${this.lname}!`);\n      this.email = ''\n      this.password = ''\n      this.fname = ''\n      this.lname = ''\n\n      // Set the username for DashboardView\n      const username = `${this.fname} ${this.lname}`\n\n      // Redirect to login page to test\n      // Actual implementation will be to the dashboard page\n      this.$router.push({name: '/dashboard', params: { username }});\n    },\n\n    closeModal() {\n      this.showSuccessModal = false;\n    }\n  },\n}\n</script>\n\n<style scoped>\n  h1 {\n    font-family: fantasy;\n    margin: 20px 0;\n  }\n\n  .flex-box-container {\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n  }\n\n  .page-name {\n    align-self: center;\n    flex-grow: 90;\n    margin-left: 28px;\n  }\n\n  .app-name {\n    flex-grow: 0;\n    font-size: 40px;\n    width: 130px;\n    text-align: left;\n    padding-left: 10px;\n  }\n\n  .flexbox-item {\n    border: 2px solid black;\n    width: 100px;\n    min-height: 50px;\n    flex-grow: 1;\n    margin: 10px 10px;\n  }\n\n  .signup {\n    background: black;\n    width: 100%;\n    height: 750px;\n  }\n\n  input {\n    margin: 8px 0;\n  }\n\n  #email {\n    margin-left: 37px;        \n  }\n\n  #password {\n    margin-left: 10px;\n  }\n\n  button {\n    text-align: center;\n    position: relative;\n    margin: 40px 10px;\n    margin-bottom: 0;\n  }\n\n  .form-group {\n    text-align: center;\n  }\n\n  .cal-2 {\n    position: absolute;\n    top: 200px;\n    right: 80px;\n    width: 200px;\n    height: 200px;\n  }\n\n  .modal {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: rgba(0, 0, 0, 0.5);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    z-index: 1000;\n  }\n\n  .modal-content {\n    background: black;\n    padding: 20px;\n    border-radius: 10px;\n    text-align: center;\n  }\n\n</style>"],"mappings":";AA6CA,SAASA,GAAE,QAAS,KAAI;AACxB,SAASC,SAAQ,QAAS,YAAW;AAErC,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,WAAW;MAClBC,KAAK,EAAE;IACT;EACF,CAAC;EACDC,KAAKA,CAAA,EAAG;IACN,MAAMC,QAAO,GAAIT,GAAG,CAAC,KAAK,CAAC;IAC3B,MAAMU,gBAAe,GAAIV,GAAG,CAAC,KAAK,CAAC;IACnC,MAAMM,KAAI,GAAIN,GAAG,CAAC,EAAE,CAAC;IACrB,MAAMO,KAAI,GAAIP,GAAG,CAAC,EAAE,CAAC;IAErB,OAAO;MACLS,QAAQ;MACRC,gBAAgB;MAChBJ,KAAK;MACLC;IACF,CAAC;EACH,CAAC;EACDI,OAAO,EAAE;IACPC,QAAQA,CAACC,CAAC,EAAE;MACVA,CAAC,CAACC,cAAc,CAAC;MAEjB,IAAG,CAAC,IAAI,CAACV,KAAI,IAAK,CAAC,IAAI,CAACC,QAAO,IAAK,CAAC,IAAI,CAACC,KAAI,IAAK,CAAC,IAAI,CAACC,KAAK,EAAE;QAC9DQ,KAAK,CAAC,4BAA4B;QAClC;MACF;;MAEA;MACA,IAAI,CAACL,gBAAe,GAAI,IAAI;;MAE5B;MACA;MACA,IAAI,CAACN,KAAI,GAAI,EAAC;MACd,IAAI,CAACC,QAAO,GAAI,EAAC;MACjB,IAAI,CAACC,KAAI,GAAI,EAAC;MACd,IAAI,CAACC,KAAI,GAAI,EAAC;;MAEd;MACA,MAAMS,QAAO,GAAK,GAAE,IAAI,CAACV,KAAK,IAAI,IAAI,CAACC,KAAM;;MAE7C;MACA;MACA,IAAI,CAACU,OAAO,CAACC,IAAI,CAAC;QAAChB,IAAI,EAAE,YAAY;QAAEiB,MAAM,EAAE;UAAEH;QAAS;MAAC,CAAC,CAAC;IAC/D,CAAC;IAEDI,UAAUA,CAAA,EAAG;MACX,IAAI,CAACV,gBAAe,GAAI,KAAK;IAC/B;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}