{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-cabbb9e2\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"dashboard\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"Let's get you started\", -1 /* HOISTED */));\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"Users\", -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h1\", null, \"Welcome to the Dashboard, \" + _toDisplayString($data.username) + \"!\", 1 /* TEXT */), _hoisted_2, _hoisted_3, _hoisted_4, _createCommentVNode(\" <div v-for=\\\"user in users\\\" :key=\\\"user.id\\\">\\n      <p>{{ user.id }} {{ user.first_name }} {{ user.last_name }} {{ user.email }}</p>\\n    </div> \"), _createElementVNode(\"p\", null, _toDisplayString($data.user.id) + \" \" + _toDisplayString($data.user.first_name) + \" \" + _toDisplayString($data.user.last_name), 1 /* TEXT */), _createCommentVNode(\" Add your dashboard content here \")]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_toDisplayString","$data","username","_hoisted_2","_hoisted_3","_hoisted_4","_createCommentVNode","user","id","first_name","last_name"],"sources":["/Users/wolf/Hub4Codes/task_management_app/task_management_ui/src/views/DashboardView.vue"],"sourcesContent":["<template>\n  <div class=\"dashboard\">\n    <h1>Welcome to the Dashboard, {{ username }}!</h1>\n    <p>Let's get you started</p>\n    <br />\n    <h1>Users</h1>\n    <!-- <div v-for=\"user in users\" :key=\"user.id\">\n      <p>{{ user.id }} {{ user.first_name }} {{ user.last_name }} {{ user.email }}</p>\n    </div> -->\n    <p>{{ user.id }} {{ user.first_name }} {{ user.last_name }}</p>\n    <!-- Add your dashboard content here -->\n  </div>\n</template>\n  \n<script>\n  export default {\n    name: 'DashboardView',\n    data() {\n      return {\n        username: '', // You can pass the username from the signup page or fetch it from the store\n        users: [],\n        user: {}\n      };\n    },\n    methods: {\n      async fetchUsers() {\n        // Fetch users from the API\n        const res = await fetch(\"api/users\")\n\n        const data = await res.json()\n        return data\n      },\n      async fetchUser(username) {\n        //here we will fetch the user from the API\n        const res = await fetch(`api/users/4cd9`)\n        const data = await res.json()\n\n        return data\n      }\n    },\n    async created() {\n      // Fetch the username from the store  or pass it from the signup page\n      this.username = this.$route.query.username || 'User';\n\n      this.users = await this.fetchUsers();\n      this.user = this.users.filter((user) => user.first_name === this.username);\n      console.log(this.users)\n    }\n};\n</script>\n\n<style scoped>\n  .dashboard {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    height: 100vh;\n  }\n  .dashboard h1 {\n    font-size: 2rem;\n    margin-bottom: 1rem;\n  }\n</style>\n  "],"mappings":";;;EACOA,KAAK,EAAC;AAAW;gEAEpBC,mBAAA,CAA4B,WAAzB,uBAAqB;gEACxBA,mBAAA,CAAM;gEACNA,mBAAA,CAAc,YAAV,OAAK;;uBAJXC,mBAAA,CAUM,OAVNC,UAUM,GATJF,mBAAA,CAAkD,YAA9C,4BAA0B,GAAAG,gBAAA,CAAGC,KAAA,CAAAC,QAAQ,IAAG,GAAC,iBAC7CC,UAA4B,EAC5BC,UAAM,EACNC,UAAc,EACdC,mBAAA,wJAEU,EACVT,mBAAA,CAA+D,WAAAG,gBAAA,CAAzDC,KAAA,CAAAM,IAAI,CAACC,EAAE,IAAG,GAAC,GAAAR,gBAAA,CAAGC,KAAA,CAAAM,IAAI,CAACE,UAAU,IAAG,GAAC,GAAAT,gBAAA,CAAGC,KAAA,CAAAM,IAAI,CAACG,SAAS,kBACxDJ,mBAAA,qCAAwC,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}