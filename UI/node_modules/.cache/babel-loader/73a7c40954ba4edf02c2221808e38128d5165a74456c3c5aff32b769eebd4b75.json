{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Task from '@/components/Task.vue';\nexport default {\n  name: 'DashboardView',\n  data() {\n    return {\n      username: '',\n      // You can pass the username from the signup page or fetch it from the store\n      users: [],\n      user: {},\n      showUserInfo: false,\n      showNameForm: false\n    };\n  },\n  components: {\n    Task\n  },\n  methods: {\n    async fetchUsers() {\n      // Fetch users from the API\n      const res = await fetch(\"api/users\");\n      const data = await res.json();\n      return data;\n    },\n    getUser() {\n      //here we will get the user from the users array\n      for (let i = 0; i < this.users.length; i++) {\n        if (this.users[i].first_name === this.username) {\n          return this.users[i];\n        }\n      }\n    },\n    toggleUserInfoVisibility(e) {\n      e.preventDefault();\n      this.showUserInfo = !this.showUserInfo;\n      if (this.showUserInfo) {\n        this.getUser();\n      }\n    },\n    async deleteUser() {\n      if (confirm('Are you sure you want to delete your profile?')) {\n        // Fetch all tasks\n        const tasks = await fetch('api/tasks');\n        const tasksJSON = await tasks.json();\n\n        // Delete all tasks associated with the user\n        for (let i = 0; i < tasksJSON.length; i++) {\n          if (tasksJSON[i].user_id === this.user.id) {\n            fetch(`api/tasks/${tasksJSON[i].id}`, {\n              method: 'DELETE'\n            });\n          }\n        }\n\n        // Delete the user\n        fetch(`api/users/${this.user.id}`, {\n          method: 'DELETE'\n        });\n\n        // Redirect to the Home page\n        this.$router.push('/');\n      }\n    },\n    updateName() {\n      if (confirm('Are you sure you want to update your name?')) {\n        // Update the user's name\n        fetch(`api/users/${this.user.id}`, {\n          method: 'PATCH',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            first_name: this.user.first_name,\n            last_name: this.user.last_name\n          })\n        });\n        alert('Name updated successfully!');\n\n        // Toggle the form visibility\n        this.showNameForm = !this.showNameForm;\n      }\n    }\n  },\n  async created() {\n    // Fetch the username from the store  or pass it from the signup page\n    this.username = this.$route.query.username || 'User';\n    this.users = await this.fetchUsers();\n    this.user = this.getUser();\n  }\n};","map":{"version":3,"names":["Task","name","data","username","users","user","showUserInfo","showNameForm","components","methods","fetchUsers","res","fetch","json","getUser","i","length","first_name","toggleUserInfoVisibility","e","preventDefault","deleteUser","confirm","tasks","tasksJSON","user_id","id","method","$router","push","updateName","headers","body","JSON","stringify","last_name","alert","created","$route","query"],"sources":["/Users/wolf/Hub4Codes/task_management_app/task_management_ui/src/views/DashboardView.vue"],"sourcesContent":["<template>\n  <div class=\"dashboard\">\n    <div class=\"flexbox-item\">\n      <button class=\"logout-btn\"><router-link to=\"/\">Logout</router-link></button>\n      <h1 class=\"dash-head\">Welcome to the Dashboard, {{ username }}!</h1>\n      <button class=\"delete-usr-btn\" @click=\"deleteUser\">Delete Profile</button>\n    </div>\n    <p>Let's get you started:</p> \n    <p>Click the Profile button to load User Account.</p>\n    <button @click=\"toggleUserInfoVisibility\">Profile</button>\n    <div v-if=\"showUserInfo && user.id\">\n      <p>UserID: {{ user.id }}</p>\n      <p @dblclick=\"showNameForm=true\">Name: {{ user.first_name }} {{ user.last_name }}</p>\n      <p>Email: {{ user.email }}</p>\n      <p>Password: {{ user.password }}</p>\n      <p>DoB: {{ user.date_of_birth }}</p>\n    </div>\n    <div class=\"updNameForm\" v-if=\"showNameForm\">\n      <form @submit.prevent=\"updateName\">\n        <h2>\n          Change your name\n          <i class=\"fas fa-times\" @click=\"showNameForm=false\"></i>\n        </h2>\n        <p>First Name: <input type=\"text\" id=\"updateName\" v-model=\"user.first_name\" required></p>\n        <p>Last Name: <input type=\"text\" id=\"updateName\" v-model=\"user.last_name\" required></p>\n        <br/>\n        <button type=\"submit\">Update Name</button>\n      </form>\n    </div>\n    <div class=\"updPasswordForm\" v-if=\"showPasswordForm\">\n      <form @submit.prevent=\"updatePassword\">\n        <h2>\n          Change your \n          <i class=\"fas fa-times\" @click=\"showPasswordForm=false\"></i>\n        </h2>\n        <p>Password: <input type=\"text\" id=\"updateName\" v-model=\"user.password\" required></p>\n        <button type=\"submit\">Update Name</button>\n      </form>\n    </div>\n    <Task :userId=\"user.id\"/>\n  </div>\n</template>\n  \n<script>\nimport Task from '@/components/Task.vue'\n\n  export default {\n    name: 'DashboardView',\n    data() {\n      return {\n        username: '', // You can pass the username from the signup page or fetch it from the store\n        users: [],\n        user: {},\n        showUserInfo: false,\n        showNameForm: false\n      };\n    },\n    components: {\n      Task\n    },\n    methods: {\n      async fetchUsers() {\n        // Fetch users from the API\n        const res = await fetch(\"api/users\")\n\n        const data = await res.json()\n        return data\n      },\n      getUser() {\n        //here we will get the user from the users array\n        for (let i=0; i < this.users.length; i++) {\n          if (this.users[i].first_name === this.username) {\n            return this.users[i];\n          }\n        }\n      },\n      toggleUserInfoVisibility(e) {\n        e.preventDefault()\n\n        this.showUserInfo = !this.showUserInfo\n        if (this.showUserInfo) {\n          this.getUser()\n        }\n      },\n      async deleteUser() {\n        if (confirm('Are you sure you want to delete your profile?')) {\n          // Fetch all tasks\n          const tasks = await fetch('api/tasks');\n          const tasksJSON = await tasks.json();\n\n          // Delete all tasks associated with the user\n          for (let i=0; i < tasksJSON.length; i++) {\n            if (tasksJSON[i].user_id === this.user.id) {\n              fetch(`api/tasks/${tasksJSON[i].id}`, {\n                method: 'DELETE'\n              })\n            }\n          }\n\n          // Delete the user\n          fetch(`api/users/${this.user.id}`, {\n            method: 'DELETE'\n          })\n\n          // Redirect to the Home page\n          this.$router.push('/')\n        }\n      },\n      updateName() {\n        if (confirm('Are you sure you want to update your name?')) {\n          // Update the user's name\n          fetch(`api/users/${this.user.id}`, {\n            method: 'PATCH',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              first_name: this.user.first_name,\n              last_name: this.user.last_name\n            })\n          })\n\n          alert('Name updated successfully!');\n\n          // Toggle the form visibility\n          this.showNameForm = !this.showNameForm; \n        }\n      }\n    },\n    async created() {\n      // Fetch the username from the store  or pass it from the signup page\n      this.username = this.$route.query.username || 'User';\n\n      this.users = await this.fetchUsers();\n      this.user = this.getUser();\n    }\n};\n</script>\n\n<style scoped>\n  .flexbox-item {\n    width: 100%;\n  }\n  .dashboard {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    height: max-content;\n    cursor: default;\n  }\n  .dashboard h1 {\n    font-size: 2rem;\n    margin-bottom: 1rem;\n  }\n  .flexbox-item {\n    position: relative;\n    display: flex;\n    justify-content: space-between;\n  }\n  .delete-usr-btn:hover {\n    background: rgb(210, 48, 23);\n  }\n\n  button {\n    position: relative;\n    text-align: center;\n    transition-duration: 0.4s;\n    padding: 10px 0;\n  }\n\n  button:hover {\n    background: #00ff80;\n  }\n  .updNameForm {\n    background: rgb(75, 74, 74);\n    display: flex;\n  }\n  .updNameForm button {\n    width: 50%;\n  }\n  .updNameForm h2 {\n    justify-content: center;\n    align-items: center;\n    text-align: center;\n    display: flex;\n  }\n  .fas {\n    color: rgb(153, 155, 155);\n    position: relative;\n    top: -20px;\n    margin-right: 10px;\n  }\n  .fas:hover {\n    color: red;\n    cursor: pointer;\n  }\n</style>\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}