{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-cabbb9e2\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"dashboard\"\n};\nconst _hoisted_2 = {\n  class: \"flexbox-item\"\n};\nconst _hoisted_3 = {\n  class: \"logout-btn\"\n};\nconst _hoisted_4 = {\n  class: \"dash-head\"\n};\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"Let's get you started:\", -1 /* HOISTED */));\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"Click the Profile button to load User Account.\", -1 /* HOISTED */));\nconst _hoisted_7 = {\n  key: 0\n};\nconst _hoisted_8 = {\n  class: \"updNameForm\"\n};\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, [/*#__PURE__*/_createTextVNode(\" Change your name \"), /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"fas fa-times\"\n})], -1 /* HOISTED */));\nconst _hoisted_10 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_11 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"Update Name\", -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  const _component_Task = _resolveComponent(\"Task\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"button\", _hoisted_3, [_createVNode(_component_router_link, {\n    to: \"/\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"Logout\")]),\n    _: 1 /* STABLE */\n  })]), _createElementVNode(\"h1\", _hoisted_4, \"Welcome to the Dashboard, \" + _toDisplayString($data.username) + \"!\", 1 /* TEXT */), _createElementVNode(\"button\", {\n    class: \"delete-usr-btn\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.deleteUser && $options.deleteUser(...args))\n  }, \"Delete Profile\")]), _hoisted_5, _hoisted_6, _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.toggleUserInfoVisibility && $options.toggleUserInfoVisibility(...args))\n  }, \"Profile\"), $data.showUserInfo && $data.user.id ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [_createElementVNode(\"p\", null, \"UserID: \" + _toDisplayString($data.user.id), 1 /* TEXT */), _createElementVNode(\"p\", {\n    onDblclick: _cache[2] || (_cache[2] = (...args) => $options.updateName && $options.updateName(...args))\n  }, \"Name: \" + _toDisplayString($data.user.first_name) + \" \" + _toDisplayString($data.user.last_name), 33 /* TEXT, NEED_HYDRATION */), _createElementVNode(\"p\", null, \"Email: \" + _toDisplayString($data.user.email), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Password: \" + _toDisplayString($data.user.password), 1 /* TEXT */), _createElementVNode(\"p\", null, \"DoB: \" + _toDisplayString($data.user.date_of_birth), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"form\", {\n    onSubmit: _cache[5] || (_cache[5] = _withModifiers((...args) => $options.updateName && $options.updateName(...args), [\"prevent\"]))\n  }, [_hoisted_9, _createElementVNode(\"p\", null, [_createTextVNode(\"First Name: \"), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"updateName\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.user.first_name = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.user.first_name]])]), _createElementVNode(\"p\", null, [_createTextVNode(\"Last Name: \"), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"updateName\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.user.last_name = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.user.last_name]])]), _hoisted_10, _hoisted_11], 32 /* NEED_HYDRATION */)]), _createVNode(_component_Task, {\n    userId: $data.user.id\n  }, null, 8 /* PROPS */, [\"userId\"])]);\n}","map":{"version":3,"names":["class","_createElementVNode","key","_createTextVNode","type","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_createVNode","_component_router_link","to","default","_withCtx","_","_hoisted_4","_toDisplayString","$data","username","onClick","_cache","args","$options","deleteUser","_hoisted_5","_hoisted_6","toggleUserInfoVisibility","showUserInfo","user","id","_hoisted_7","onDblclick","updateName","first_name","last_name","email","password","date_of_birth","_createCommentVNode","_hoisted_8","onSubmit","_withModifiers","_hoisted_9","$event","required","_hoisted_10","_hoisted_11","_component_Task","userId"],"sources":["/Users/wolf/Hub4Codes/task_management_app/task_management_ui/src/views/DashboardView.vue"],"sourcesContent":["<template>\n  <div class=\"dashboard\">\n    <div class=\"flexbox-item\">\n      <button class=\"logout-btn\"><router-link to=\"/\">Logout</router-link></button>\n      <h1 class=\"dash-head\">Welcome to the Dashboard, {{ username }}!</h1>\n      <button class=\"delete-usr-btn\" @click=\"deleteUser\">Delete Profile</button>\n    </div>\n    <p>Let's get you started:</p> \n    <p>Click the Profile button to load User Account.</p>\n    <button @click=\"toggleUserInfoVisibility\">Profile</button>\n    <div v-if=\"showUserInfo && user.id\">\n      <p>UserID: {{ user.id }}</p>\n      <p @dblclick=\"updateName\">Name: {{ user.first_name }} {{ user.last_name }}</p>\n      <p>Email: {{ user.email }}</p>\n      <p>Password: {{ user.password }}</p>\n      <p>DoB: {{ user.date_of_birth }}</p>\n    </div>\n    <div class=\"updNameForm\">\n      <form @submit.prevent=\"updateName\">\n        <h2>\n          Change your name\n          <i class=\"fas fa-times\"></i>\n        </h2>\n        <p>First Name: <input type=\"text\" id=\"updateName\" v-model=\"user.first_name\" required></p>\n        <p>Last Name: <input type=\"text\" id=\"updateName\" v-model=\"user.last_name\" required></p>\n        <br/>\n        <button type=\"submit\">Update Name</button>\n      </form>\n    </div>\n    <Task :userId=\"user.id\"/>\n  </div>\n</template>\n  \n<script>\nimport Task from '@/components/Task.vue'\n\n  export default {\n    name: 'DashboardView',\n    data() {\n      return {\n        username: '', // You can pass the username from the signup page or fetch it from the store\n        users: [],\n        user: {},\n        showUserInfo: false\n      };\n    },\n    components: {\n      Task\n    },\n    methods: {\n      async fetchUsers() {\n        // Fetch users from the API\n        const res = await fetch(\"api/users\")\n\n        const data = await res.json()\n        return data\n      },\n      getUser() {\n        //here we will get the user from the users array\n        for (let i=0; i < this.users.length; i++) {\n          if (this.users[i].first_name === this.username) {\n            return this.users[i];\n          }\n        }\n      },\n      toggleUserInfoVisibility(e) {\n        e.preventDefault()\n\n        this.showUserInfo = !this.showUserInfo\n        if (this.showUserInfo) {\n          this.getUser()\n        }\n      },\n      async deleteUser() {\n        if (confirm('Are you sure you want to delete your profile?')) {\n          // Fetch all tasks\n          const tasks = await fetch('api/tasks');\n          const tasksJSON = await tasks.json();\n\n          // Delete all tasks associated with the user\n          for (let i=0; i < tasksJSON.length; i++) {\n            if (tasksJSON[i].user_id === this.user.id) {\n              fetch(`api/tasks/${tasksJSON[i].id}`, {\n                method: 'DELETE'\n              })\n            }\n          }\n\n          // Delete the user\n          fetch(`api/users/${this.user.id}`, {\n            method: 'DELETE'\n          })\n\n          // Redirect to the Home page\n          this.$router.push('/')\n        }\n      },\n      updateName() {\n        if (confirm('Are you sure you want to update your name?')) {\n          alert('Double click on the name to update it'); \n        }\n      }\n    },\n    async created() {\n      // Fetch the username from the store  or pass it from the signup page\n      this.username = this.$route.query.username || 'User';\n\n      this.users = await this.fetchUsers();\n      this.user = this.getUser();\n    }\n};\n</script>\n\n<style scoped>\n  .flexbox-item {\n    width: 100%;\n  }\n  .dashboard {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    height: max-content;\n  }\n  .dashboard h1 {\n    font-size: 2rem;\n    margin-bottom: 1rem;\n  }\n  .flexbox-item {\n    position: relative;\n    display: flex;\n    justify-content: space-between;\n  }\n  .delete-usr-btn:hover {\n    background: rgb(210, 48, 23);\n  }\n\n  button {\n    position: relative;\n    text-align: center;\n    transition-duration: 0.4s;\n    padding: 10px 0;\n  }\n\n  button:hover {\n    background: #00ff80;\n  }\n  .updNameForm {\n    background: rgb(75, 74, 74)\n  }\n  .updNameForm button {\n    width: 30%;\n  }\n  .fas {\n    color: rgb(153, 155, 155);\n    position: relative;\n    top: -20px;\n    margin-right: 10px;\n  }\n</style>\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}