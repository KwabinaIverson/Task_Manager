{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nimport { useRouter } from 'vue-router';\nexport default {\n  name: 'Signup',\n  data() {\n    return {\n      email: '',\n      password: '',\n      fname: '',\n      lname: '',\n      dateOfBirth: '',\n      emailError: ''\n    };\n  },\n  setup() {\n    const btnHover = ref(false);\n    const showSuccessModal = ref(false);\n    const fname = ref('');\n    const lname = ref('');\n    return {\n      btnHover,\n      showSuccessModal,\n      fname,\n      lname\n    };\n  },\n  methods: {\n    validateEmail() {\n      // email regex\n      const emailRegex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\n\n      // check if email is valid\n      if (!emailRegex.test(this.email)) {\n        this.emailError = 'Please enter a valid email';\n        this.email = '';\n        this.password = '';\n        this.fname = '';\n        this.lname = '';\n        this.dateOfBirth = '';\n      } else {\n        this.emailError = '';\n        return true;\n      }\n    },\n    async onSignup(e) {\n      e.preventDefault();\n      if (!this.email || !this.password || !this.fname || !this.lname) {\n        alert('Please fill in every field');\n        return;\n      }\n\n      // Show success modal\n      this.showSuccessModal = true;\n\n      // Set the username for DashboardView\n      const username = this.fname;\n\n      // Validate email\n      if (!this.validateEmail()) {\n        return;\n      }\n\n      // Add New User to the API\n      const newUser = {\n        first_name: this.fname,\n        last_name: this.lname,\n        email: this.email,\n        password: this.password,\n        date_of_birth: this.dateOfBirth\n      };\n      await fetch('api/users', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newUser)\n      });\n\n      //alert('Account Creation Successful!');\n      //alert(`Welcome to AgileFlow! ${this.fname} ${this.lname}!`);\n      this.email = '';\n      this.password = '';\n      this.fname = '';\n      this.lname = '';\n      this.dateOfBirth = '';\n\n      // Redirect to login page to test\n      // Actual implementation will be to the dashboard page\n      this.$router.push({\n        name: 'dashboard',\n        query: {\n          username\n        }\n      });\n    },\n    closeModal() {\n      this.showSuccessModal = false;\n    }\n  }\n};","map":{"version":3,"names":["ref","useRouter","name","data","email","password","fname","lname","dateOfBirth","emailError","setup","btnHover","showSuccessModal","methods","validateEmail","emailRegex","test","onSignup","e","preventDefault","alert","username","newUser","first_name","last_name","date_of_birth","fetch","method","headers","body","JSON","stringify","$router","push","query","closeModal"],"sources":["/Users/wolf/Hub4Codes/task_management_app/task_management_ui/src/components/Signup.vue"],"sourcesContent":["<template>\n    <div class=\"signup\">\n      <div class=\"flex-box-container\">\n        <h1 class=\"app-name\">AgileFlow</h1>\n        <h1 class=\"page-name\">Sign Up Page</h1>\n        <div class=\"flexbox-item\"></div>\n      </div>\n      <form @submit=\"onSignup\">\n        <div class=\"form-group\">\n          <label for=\"fname\">First Name </label>\n          <input type=\"text\" id=\"fname\" v-model=\"fname\" required placeholder=\"John\">\n        </div>\n        <div class=\"form-group\">\n          <label for=\"lname\">Last Name </label>\n          <input type=\"text\" id=\"lname\" v-model=\"lname\" required placeholder=\"Doe\">\n        </div>\n        <div class=\"form-group\">\n          <label for=\"email\">Email </label>\n          <input type=\"email\" id=\"email\" v-model=\"email\" required placeholder=\"johndoe@gmail.com\">\n          <p v-if=\"emailError\" class=\"error-msg\">{{ emailError }}</p>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"password\">Password </label>\n          <input type=\"password\" id=\"password\" v-model=\"password\" required placeholder=\"babayega\">\n        </div>\n        <div class=\"form-group\" id=\"testdob\">\n            <label for=\"dob\">Date of Birth </label>\n            <input type=\"date\" id=\"dob\" v-model=\"dateOfBirth\" required>\n        </div>\n        <button @click=\"onSignup\"\n          @mouseover=\"btnHover = true\"\n          @mouseleave=\"btnHover = false\"\n          :class=\"{ 'is-hovering': btnHover }\"\n        >\n          Sign Up\n        </button>\n      </form>\n      <img class=\"cal-3\" alt=\"Calendar picture 2\" src=\"../assets/cal-3.png\">\n    </div>\n</template>\n  \n<script>\n  import { ref } from 'vue'\n  import { useRouter } from 'vue-router'\n  \n  export default {\n    name: 'Signup',\n    data() {\n      return {\n        email: '',\n        password: '',\n        fname: '',\n        lname: '',\n        dateOfBirth: '',\n        emailError: '',\n      }\n    },\n    setup() {\n      const btnHover = ref(false);\n      const showSuccessModal = ref(false);\n      const fname = ref('');\n      const lname = ref('');\n  \n      return {\n        btnHover,\n        showSuccessModal,\n        fname,\n        lname\n      };\n    },\n    methods: {\n      validateEmail() {\n        // email regex\n        const emailRegex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\n\n        // check if email is valid\n        if (!emailRegex.test(this.email)) {\n          this.emailError = 'Please enter a valid email';\n          this.email = ''\n          this.password = ''\n          this.fname = ''\n          this.lname = ''\n        this.dateOfBirth = ''\n        } else {\n          this.emailError = '';\n          return true;\n        }\n      },\n      async onSignup(e) {\n        e.preventDefault()\n  \n        if(!this.email || !this.password || !this.fname || !this.lname) {\n          alert('Please fill in every field')\n          return\n        }\n  \n        // Show success modal\n        this.showSuccessModal = true;\n\n        // Set the username for DashboardView\n        const username = this.fname;\n\n        // Validate email\n        if (!this.validateEmail()) {\n          return;\n        }\n\n        // Add New User to the API\n        const newUser = {\n          first_name: this.fname,\n          last_name: this.lname,\n          email: this.email,\n          password: this.password,\n          date_of_birth: this.dateOfBirth\n        }\n        await fetch('api/users', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(newUser)\n        })\n  \n        //alert('Account Creation Successful!');\n        //alert(`Welcome to AgileFlow! ${this.fname} ${this.lname}!`);\n        this.email = ''\n        this.password = ''\n        this.fname = ''\n        this.lname = ''\n        this.dateOfBirth = ''\n  \n        // Redirect to login page to test\n        // Actual implementation will be to the dashboard page\n        this.$router.push({ name: 'dashboard', query: { username } });\n      },\n      closeModal() {\n        this.showSuccessModal = false;\n      }\n    },\n  }\n</script>\n  \n<style scoped>\n  h1 {\n    font-family: fantasy;\n    margin: 20px 0;\n  }\n  \n  .flex-box-container {\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n  }\n  \n  .page-name {\n    align-self: center;\n    flex-grow: 90;\n    margin-left: 28px;\n  }\n\n  .app-name {\n    flex-grow: 0;\n    font-size: 40px;\n    width: 130px;\n    text-align: left;\n    padding-left: 10px;\n  }\n\n  .flexbox-item {\n    border: 2px solid black;\n    width: 100px;\n    min-height: 50px;\n    flex-grow: 1;\n    margin: 10px 10px;\n  }\n\n  .signup {\n    background: black;\n    width: 100%;\n    height: 750px;\n  }\n\n  input {\n    margin: 8px 0;\n  }\n\n  #email {\n    margin-left: 37px;        \n  }\n\n  #password {\n    margin-left: 10px;\n  }\n\n  button {\n    text-align: center;\n    position: relative;\n    margin: 40px 10px;\n    margin-bottom: 0;\n  }\n\n  .form-group {\n    text-align: center;\n  }\n\n  .cal-2 {\n    position: absolute;\n    top: 200px;\n    right: 80px;\n    width: 200px;\n    height: 200px;\n  }\n\n  .error-msg {\n    color: red;\n    margin-top: 5px;\n  }\n</style>"],"mappings":";AA0CE,SAASA,GAAE,QAAS,KAAI;AACxB,SAASC,SAAQ,QAAS,YAAW;AAErC,eAAe;EACbC,IAAI,EAAE,QAAQ;EACdC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,EAAE;MACTC,KAAK,EAAE,EAAE;MACTC,WAAW,EAAE,EAAE;MACfC,UAAU,EAAE;IACd;EACF,CAAC;EACDC,KAAKA,CAAA,EAAG;IACN,MAAMC,QAAO,GAAIX,GAAG,CAAC,KAAK,CAAC;IAC3B,MAAMY,gBAAe,GAAIZ,GAAG,CAAC,KAAK,CAAC;IACnC,MAAMM,KAAI,GAAIN,GAAG,CAAC,EAAE,CAAC;IACrB,MAAMO,KAAI,GAAIP,GAAG,CAAC,EAAE,CAAC;IAErB,OAAO;MACLW,QAAQ;MACRC,gBAAgB;MAChBN,KAAK;MACLC;IACF,CAAC;EACH,CAAC;EACDM,OAAO,EAAE;IACPC,aAAaA,CAAA,EAAG;MACd;MACA,MAAMC,UAAS,GAAI,iDAAiD;;MAEpE;MACA,IAAI,CAACA,UAAU,CAACC,IAAI,CAAC,IAAI,CAACZ,KAAK,CAAC,EAAE;QAChC,IAAI,CAACK,UAAS,GAAI,4BAA4B;QAC9C,IAAI,CAACL,KAAI,GAAI,EAAC;QACd,IAAI,CAACC,QAAO,GAAI,EAAC;QACjB,IAAI,CAACC,KAAI,GAAI,EAAC;QACd,IAAI,CAACC,KAAI,GAAI,EAAC;QAChB,IAAI,CAACC,WAAU,GAAI,EAAC;MACpB,OAAO;QACL,IAAI,CAACC,UAAS,GAAI,EAAE;QACpB,OAAO,IAAI;MACb;IACF,CAAC;IACD,MAAMQ,QAAQA,CAACC,CAAC,EAAE;MAChBA,CAAC,CAACC,cAAc,CAAC;MAEjB,IAAG,CAAC,IAAI,CAACf,KAAI,IAAK,CAAC,IAAI,CAACC,QAAO,IAAK,CAAC,IAAI,CAACC,KAAI,IAAK,CAAC,IAAI,CAACC,KAAK,EAAE;QAC9Da,KAAK,CAAC,4BAA4B;QAClC;MACF;;MAEA;MACA,IAAI,CAACR,gBAAe,GAAI,IAAI;;MAE5B;MACA,MAAMS,QAAO,GAAI,IAAI,CAACf,KAAK;;MAE3B;MACA,IAAI,CAAC,IAAI,CAACQ,aAAa,CAAC,CAAC,EAAE;QACzB;MACF;;MAEA;MACA,MAAMQ,OAAM,GAAI;QACdC,UAAU,EAAE,IAAI,CAACjB,KAAK;QACtBkB,SAAS,EAAE,IAAI,CAACjB,KAAK;QACrBH,KAAK,EAAE,IAAI,CAACA,KAAK;QACjBC,QAAQ,EAAE,IAAI,CAACA,QAAQ;QACvBoB,aAAa,EAAE,IAAI,CAACjB;MACtB;MACA,MAAMkB,KAAK,CAAC,WAAW,EAAE;QACvBC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACT,OAAO;MAC9B,CAAC;;MAED;MACA;MACA,IAAI,CAAClB,KAAI,GAAI,EAAC;MACd,IAAI,CAACC,QAAO,GAAI,EAAC;MACjB,IAAI,CAACC,KAAI,GAAI,EAAC;MACd,IAAI,CAACC,KAAI,GAAI,EAAC;MACd,IAAI,CAACC,WAAU,GAAI,EAAC;;MAEpB;MACA;MACA,IAAI,CAACwB,OAAO,CAACC,IAAI,CAAC;QAAE/B,IAAI,EAAE,WAAW;QAAEgC,KAAK,EAAE;UAAEb;QAAS;MAAE,CAAC,CAAC;IAC/D,CAAC;IACDc,UAAUA,CAAA,EAAG;MACX,IAAI,CAACvB,gBAAe,GAAI,KAAK;IAC/B;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}