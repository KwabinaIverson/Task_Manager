openapi: 3.0.0
info:
  title: Flask User API (Task Manager)
  description: API for managing user objects in a database.
  version: 1.0.0
servers:
  - url: http://localhost:5000/api/v1

paths:
  /users:
    get:
      summary: Get all users
      description: Retrieves a list of all user objects.
      responses:
        '200':
          description: A list of user objects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      summary: Create a new user
      description: Creates a new user object.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  '/users/{user_id}':
    get:
      summary: Get a user by ID
      description: Retrieves a specific user object by its ID.
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User object retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found

    put:
      summary: Update a user by ID
      description: Updates a specific user object by its ID.
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: User updated successfully
        '400':
          description: Invalid request data
        '404':
          description: User not found

    delete:
      summary: Delete a user by ID
      description: Deletes a specific user object by its ID.
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User deleted successfully
        '404':
          description: User not found

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        email:
          type: string
          format: email
        password:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - email
        - password
